// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class SellOrderFilled extends ethereum.Event {
  get params(): SellOrderFilled__Params {
    return new SellOrderFilled__Params(this);
  }
}

export class SellOrderFilled__Params {
  _event: SellOrderFilled;

  constructor(event: SellOrderFilled) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get erc721address(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Exchange extends ethereum.SmartContract {
  static bind(address: Address): Exchange {
    return new Exchange("Exchange", address);
  }

  getRoyaltyPayoutAddress(_erc721address: Address): Address {
    let result = super.call(
      "getRoyaltyPayoutAddress",
      "getRoyaltyPayoutAddress(address):(address)",
      [ethereum.Value.fromAddress(_erc721address)]
    );

    return result[0].toAddress();
  }

  try_getRoyaltyPayoutAddress(
    _erc721address: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoyaltyPayoutAddress",
      "getRoyaltyPayoutAddress(address):(address)",
      [ethereum.Value.fromAddress(_erc721address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoyaltyPayoutRate(_erc721address: Address): BigInt {
    let result = super.call(
      "getRoyaltyPayoutRate",
      "getRoyaltyPayoutRate(address):(uint256)",
      [ethereum.Value.fromAddress(_erc721address)]
    );

    return result[0].toBigInt();
  }

  try_getRoyaltyPayoutRate(
    _erc721address: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoyaltyPayoutRate",
      "getRoyaltyPayoutRate(address):(uint256)",
      [ethereum.Value.fromAddress(_erc721address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isAddressFrozen(addressToCheck: Address): boolean {
    let result = super.call(
      "isAddressFrozen",
      "isAddressFrozen(address):(bool)",
      [ethereum.Value.fromAddress(addressToCheck)]
    );

    return result[0].toBoolean();
  }

  try_isAddressFrozen(addressToCheck: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAddressFrozen",
      "isAddressFrozen(address):(bool)",
      [ethereum.Value.fromAddress(addressToCheck)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOrderCancelled(signature: Bytes): boolean {
    let result = super.call(
      "isOrderCancelled",
      "isOrderCancelled(bytes):(bool)",
      [ethereum.Value.fromBytes(signature)]
    );

    return result[0].toBoolean();
  }

  try_isOrderCancelled(signature: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOrderCancelled",
      "isOrderCancelled(bytes):(bool)",
      [ethereum.Value.fromBytes(signature)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class CancelOrderCall extends ethereum.Call {
  get inputs(): CancelOrderCall__Inputs {
    return new CancelOrderCall__Inputs(this);
  }

  get outputs(): CancelOrderCall__Outputs {
    return new CancelOrderCall__Outputs(this);
  }
}

export class CancelOrderCall__Inputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }

  get signature(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CancelOrderCall__Outputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }
}

export class FreezeAddressCall extends ethereum.Call {
  get inputs(): FreezeAddressCall__Inputs {
    return new FreezeAddressCall__Inputs(this);
  }

  get outputs(): FreezeAddressCall__Outputs {
    return new FreezeAddressCall__Outputs(this);
  }
}

export class FreezeAddressCall__Inputs {
  _call: FreezeAddressCall;

  constructor(call: FreezeAddressCall) {
    this._call = call;
  }

  get addressToFreeze(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class FreezeAddressCall__Outputs {
  _call: FreezeAddressCall;

  constructor(call: FreezeAddressCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetMakerWalletCall extends ethereum.Call {
  get inputs(): SetMakerWalletCall__Inputs {
    return new SetMakerWalletCall__Inputs(this);
  }

  get outputs(): SetMakerWalletCall__Outputs {
    return new SetMakerWalletCall__Outputs(this);
  }
}

export class SetMakerWalletCall__Inputs {
  _call: SetMakerWalletCall;

  constructor(call: SetMakerWalletCall) {
    this._call = call;
  }

  get _newMakerWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMakerWalletCall__Outputs {
  _call: SetMakerWalletCall;

  constructor(call: SetMakerWalletCall) {
    this._call = call;
  }
}

export class SetRoyaltyCall extends ethereum.Call {
  get inputs(): SetRoyaltyCall__Inputs {
    return new SetRoyaltyCall__Inputs(this);
  }

  get outputs(): SetRoyaltyCall__Outputs {
    return new SetRoyaltyCall__Outputs(this);
  }
}

export class SetRoyaltyCall__Inputs {
  _call: SetRoyaltyCall;

  constructor(call: SetRoyaltyCall) {
    this._call = call;
  }

  get _erc721address(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _payoutAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _payoutPerMille(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetRoyaltyCall__Outputs {
  _call: SetRoyaltyCall;

  constructor(call: SetRoyaltyCall) {
    this._call = call;
  }
}

export class TradeCall extends ethereum.Call {
  get inputs(): TradeCall__Inputs {
    return new TradeCall__Inputs(this);
  }

  get outputs(): TradeCall__Outputs {
    return new TradeCall__Outputs(this);
  }
}

export class TradeCall__Inputs {
  _call: TradeCall;

  constructor(call: TradeCall) {
    this._call = call;
  }

  get seller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get erc721address(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get expiration(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get signature(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get buyer(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class TradeCall__Outputs {
  _call: TradeCall;

  constructor(call: TradeCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnFreezeAddressCall extends ethereum.Call {
  get inputs(): UnFreezeAddressCall__Inputs {
    return new UnFreezeAddressCall__Inputs(this);
  }

  get outputs(): UnFreezeAddressCall__Outputs {
    return new UnFreezeAddressCall__Outputs(this);
  }
}

export class UnFreezeAddressCall__Inputs {
  _call: UnFreezeAddressCall;

  constructor(call: UnFreezeAddressCall) {
    this._call = call;
  }

  get addressToUnFreeze(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnFreezeAddressCall__Outputs {
  _call: UnFreezeAddressCall;

  constructor(call: UnFreezeAddressCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
